import { ElementRef, Renderer2, TemplateRef } from '@angular/core';
import { PositioningService } from 'ngx-bootstrap/positioning';
import { TypeaheadMatch } from './typeahead-match.class';
import { TypeaheadDirective } from './typeahead.directive';
import * as ɵngcc0 from '@angular/core';
export declare class TypeaheadContainerComponent {
    private positionService;
    private renderer;
    element: ElementRef;
    parent: TypeaheadDirective;
    query: string[] | string;
    isFocused: boolean;
    top: string;
    left: string;
    display: string;
    placement: string;
    dropup: boolean;
    guiHeight: string;
    needScrollbar: boolean;
    animationState: string;
    visibility: string;
    height: number;
    readonly isBs4: boolean;
    protected _active: TypeaheadMatch;
    protected _matches: TypeaheadMatch[];
    private ulElement;
    private liElements;
    constructor(positionService: PositioningService, renderer: Renderer2, element: ElementRef);
    readonly active: TypeaheadMatch;
    matches: TypeaheadMatch[];
    readonly isTopPosition: boolean;
    readonly optionsListTemplate: TemplateRef<any>;
    readonly isAnimated: boolean;
    readonly adaptivePosition: boolean;
    readonly typeaheadScrollable: boolean;
    readonly typeaheadOptionsInScrollableView: number;
    readonly typeaheadIsFirstItemActive: boolean;
    readonly itemTemplate: TemplateRef<any>;
    selectActiveMatch(isActiveItemChanged?: boolean): void;
    positionServiceEnable(): void;
    prevActiveMatch(): void;
    nextActiveMatch(): void;
    selectActive(value: TypeaheadMatch): void;
    highlight(match: TypeaheadMatch, query: string[] | string): string;
    focusLost(): void;
    isActive(value: TypeaheadMatch): boolean;
    selectMatch(value: TypeaheadMatch, e?: Event): boolean;
    setScrollableMode(): void;
    scrollPrevious(index: number): void;
    scrollNext(index: number): void;
    private isScrolledIntoView;
    private scrollToBottom;
    private scrollToTop;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TypeaheadContainerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<TypeaheadContainerComponent, "typeahead-container", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZWFoZWFkLWNvbnRhaW5lci5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsidHlwZWFoZWFkLWNvbnRhaW5lci5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgUmVuZGVyZXIyLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUG9zaXRpb25pbmdTZXJ2aWNlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC9wb3NpdGlvbmluZyc7XG5pbXBvcnQgeyBUeXBlYWhlYWRNYXRjaCB9IGZyb20gJy4vdHlwZWFoZWFkLW1hdGNoLmNsYXNzJztcbmltcG9ydCB7IFR5cGVhaGVhZERpcmVjdGl2ZSB9IGZyb20gJy4vdHlwZWFoZWFkLmRpcmVjdGl2ZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBUeXBlYWhlYWRDb250YWluZXJDb21wb25lbnQge1xuICAgIHByaXZhdGUgcG9zaXRpb25TZXJ2aWNlO1xuICAgIHByaXZhdGUgcmVuZGVyZXI7XG4gICAgZWxlbWVudDogRWxlbWVudFJlZjtcbiAgICBwYXJlbnQ6IFR5cGVhaGVhZERpcmVjdGl2ZTtcbiAgICBxdWVyeTogc3RyaW5nW10gfCBzdHJpbmc7XG4gICAgaXNGb2N1c2VkOiBib29sZWFuO1xuICAgIHRvcDogc3RyaW5nO1xuICAgIGxlZnQ6IHN0cmluZztcbiAgICBkaXNwbGF5OiBzdHJpbmc7XG4gICAgcGxhY2VtZW50OiBzdHJpbmc7XG4gICAgZHJvcHVwOiBib29sZWFuO1xuICAgIGd1aUhlaWdodDogc3RyaW5nO1xuICAgIG5lZWRTY3JvbGxiYXI6IGJvb2xlYW47XG4gICAgYW5pbWF0aW9uU3RhdGU6IHN0cmluZztcbiAgICB2aXNpYmlsaXR5OiBzdHJpbmc7XG4gICAgaGVpZ2h0OiBudW1iZXI7XG4gICAgcmVhZG9ubHkgaXNCczQ6IGJvb2xlYW47XG4gICAgcHJvdGVjdGVkIF9hY3RpdmU6IFR5cGVhaGVhZE1hdGNoO1xuICAgIHByb3RlY3RlZCBfbWF0Y2hlczogVHlwZWFoZWFkTWF0Y2hbXTtcbiAgICBwcml2YXRlIHVsRWxlbWVudDtcbiAgICBwcml2YXRlIGxpRWxlbWVudHM7XG4gICAgY29uc3RydWN0b3IocG9zaXRpb25TZXJ2aWNlOiBQb3NpdGlvbmluZ1NlcnZpY2UsIHJlbmRlcmVyOiBSZW5kZXJlcjIsIGVsZW1lbnQ6IEVsZW1lbnRSZWYpO1xuICAgIHJlYWRvbmx5IGFjdGl2ZTogVHlwZWFoZWFkTWF0Y2g7XG4gICAgbWF0Y2hlczogVHlwZWFoZWFkTWF0Y2hbXTtcbiAgICByZWFkb25seSBpc1RvcFBvc2l0aW9uOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IG9wdGlvbnNMaXN0VGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgcmVhZG9ubHkgaXNBbmltYXRlZDogYm9vbGVhbjtcbiAgICByZWFkb25seSBhZGFwdGl2ZVBvc2l0aW9uOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IHR5cGVhaGVhZFNjcm9sbGFibGU6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgdHlwZWFoZWFkT3B0aW9uc0luU2Nyb2xsYWJsZVZpZXc6IG51bWJlcjtcbiAgICByZWFkb25seSB0eXBlYWhlYWRJc0ZpcnN0SXRlbUFjdGl2ZTogYm9vbGVhbjtcbiAgICByZWFkb25seSBpdGVtVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgc2VsZWN0QWN0aXZlTWF0Y2goaXNBY3RpdmVJdGVtQ2hhbmdlZD86IGJvb2xlYW4pOiB2b2lkO1xuICAgIHBvc2l0aW9uU2VydmljZUVuYWJsZSgpOiB2b2lkO1xuICAgIHByZXZBY3RpdmVNYXRjaCgpOiB2b2lkO1xuICAgIG5leHRBY3RpdmVNYXRjaCgpOiB2b2lkO1xuICAgIHNlbGVjdEFjdGl2ZSh2YWx1ZTogVHlwZWFoZWFkTWF0Y2gpOiB2b2lkO1xuICAgIGhpZ2hsaWdodChtYXRjaDogVHlwZWFoZWFkTWF0Y2gsIHF1ZXJ5OiBzdHJpbmdbXSB8IHN0cmluZyk6IHN0cmluZztcbiAgICBmb2N1c0xvc3QoKTogdm9pZDtcbiAgICBpc0FjdGl2ZSh2YWx1ZTogVHlwZWFoZWFkTWF0Y2gpOiBib29sZWFuO1xuICAgIHNlbGVjdE1hdGNoKHZhbHVlOiBUeXBlYWhlYWRNYXRjaCwgZT86IEV2ZW50KTogYm9vbGVhbjtcbiAgICBzZXRTY3JvbGxhYmxlTW9kZSgpOiB2b2lkO1xuICAgIHNjcm9sbFByZXZpb3VzKGluZGV4OiBudW1iZXIpOiB2b2lkO1xuICAgIHNjcm9sbE5leHQoaW5kZXg6IG51bWJlcik6IHZvaWQ7XG4gICAgcHJpdmF0ZSBpc1Njcm9sbGVkSW50b1ZpZXc7XG4gICAgcHJpdmF0ZSBzY3JvbGxUb0JvdHRvbTtcbiAgICBwcml2YXRlIHNjcm9sbFRvVG9wO1xufVxuIl19