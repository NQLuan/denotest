{"version":3,"file":"ngx-toastr.js","sources":["ng:/ngx-toastr/toastr/toast.directive.ts","ng:/ngx-toastr/toastr/toastr-config.ts","ng:/ngx-toastr/portal/portal.ts","ng:/ngx-toastr/portal/dom-portal-host.ts","ng:/ngx-toastr/overlay/overlay-container.ts","ng:/ngx-toastr/overlay/overlay-ref.ts","ng:/ngx-toastr/overlay/overlay.ts","ng:/ngx-toastr/toastr/toast-injector.ts","ng:/ngx-toastr/toastr/toastr.service.ts","ng:/ngx-toastr/toastr/toast.component.ts","ng:/ngx-toastr/toastr/toastr.module.ts","ng:/ngx-toastr/toastr/toast-noanimation.component.ts"],"names":[],"mappings":"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,AACA,AAAA,AACA,AAEA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAEA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAEA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAIA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AAIA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AAAA,AAAA,AAAA,AACA,AAKA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AAAA,AAAA,AAAA,AACA,AAGA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAKA,AAAA,AACA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AAAA,AAAA,AAAA,AACA,AAKA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAMA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA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A,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAIA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAKA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAEA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AA1LA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAiBA,AACA,AAtBA,AAAA,AAHA,AAAA,AAfA,AAAA,AAiDA,AAAA,AAAA,AAAA,AAGA,AAAA,AAAA,AAAA,AAgHA,AAAA,AAAA,AAAA,AAUA,AAAA,AAAA,AAAA,AAaA,AAAA,AAAA,AAAA,AAsBA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAQA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AACA,AACA,AACA,AAAA,AACA,AApBA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA","sourcesContent":["import {\n  Directive,\n  ElementRef,\n  NgModule,\n} from '@angular/core';\n\n@Directive({\n  selector: '[toastContainer]',\n  exportAs: 'toastContainer',\n})\nexport class ToastContainerDirective {\n  constructor(private el: ElementRef) { }\n  getContainerElement(): HTMLElement {\n    return this.el.nativeElement;\n  }\n}\n\n@NgModule({\n  declarations: [ToastContainerDirective],\n  exports: [ToastContainerDirective],\n})\nexport class ToastContainerModule {}\n","import { InjectionToken } from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\n\nimport { Observable, Subject } from 'rxjs';\n\nimport { ComponentType } from '../portal/portal';\nimport { ToastRef } from './toast-injector';\n\nexport type ProgressAnimationType = 'increasing' | 'decreasing';\n\n/**\n * Configuration for an individual toast.\n */\nexport interface IndividualConfig {\n  /**\n   * disable both timeOut and extendedTimeOut\n   * default: false\n   */\n  disableTimeOut: boolean;\n  /**\n   * toast time to live in milliseconds\n   * default: 5000\n   */\n  timeOut: number;\n  /**\n   * toast show close button\n   * default: false\n   */\n  closeButton: boolean;\n  /**\n   * time to close after a user hovers over toast\n   * default: 1000\n   */\n  extendedTimeOut: number;\n  /**\n   * show toast progress bar\n   * default: false\n   */\n  progressBar: boolean;\n\n  /**\n   * changes toast progress bar animation\n   * default: decreasing\n   */\n  progressAnimation: ProgressAnimationType;\n\n  /**\n   * render html in toast message (possibly unsafe)\n   * default: false\n   */\n  enableHtml: boolean;\n  /**\n   * css class on toast component\n   * default: toast\n   */\n  toastClass: string;\n  /**\n   * css class on toast container\n   * default: toast-top-right\n   */\n  positionClass: string;\n  /**\n   * css class on toast title\n   * default: toast-title\n   */\n  titleClass: string;\n  /**\n   * css class on toast message\n   * default: toast-message\n   */\n  messageClass: string;\n  /**\n   * animation easing on toast\n   * default: ease-in\n   */\n  easing: string;\n  /**\n   * animation ease time on toast\n   * default: 300\n   */\n  easeTime: string | number;\n  /**\n   * clicking on toast dismisses it\n   * default: true\n   */\n  tapToDismiss: boolean;\n  /**\n   * Angular toast component to be shown\n   * default: Toast\n   */\n  toastComponent?: ComponentType<any>;\n  /**\n   * Helps show toast from a websocket or from event outside Angular\n   * default: false\n   */\n  onActivateTick: boolean;\n}\n\nexport interface ToastrIconClasses {\n  error: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\n/**\n * Global Toast configuration\n * Includes all IndividualConfig\n */\nexport interface GlobalConfig extends IndividualConfig {\n  /**\n   * max toasts opened. Toasts will be queued\n   * Zero is unlimited\n   * default: 0\n   */\n  maxOpened: number;\n  /**\n   * dismiss current toast when max is reached\n   * default: false\n   */\n  autoDismiss: boolean;\n  iconClasses: Partial<ToastrIconClasses>;\n  /**\n   * New toast placement\n   * default: true\n   */\n  newestOnTop: boolean;\n  /**\n   * block duplicate messages\n   * default: false\n   */\n  preventDuplicates: boolean;\n\n  /**\n   * Reset toast timeout when there's a duplicate (preventDuplicates needs to be set to true)\n   * default: false\n   */\n  resetTimeoutOnDuplicate: boolean;\n}\n\n/**\n * Everything a toast needs to launch\n */\nexport class ToastPackage {\n  private _onTap = new Subject<any>();\n  private _onAction = new Subject<any>();\n\n  constructor(\n    public toastId: number,\n    public config: IndividualConfig,\n    public message: string | SafeHtml | null | undefined,\n    public title: string | undefined,\n    public toastType: string,\n    public toastRef: ToastRef<any>,\n  ) {\n    this.toastRef.afterClosed().subscribe(() => {\n      this._onAction.complete();\n      this._onTap.complete();\n    });\n  }\n\n  /** Fired on click */\n  triggerTap() {\n    this._onTap.next();\n    if (this.config.tapToDismiss) {\n      this._onTap.complete();\n    }\n  }\n\n  onTap(): Observable<any> {\n    return this._onTap.asObservable();\n  }\n\n  /** available for use in custom toast */\n  triggerAction(action?: any) {\n    this._onAction.next(action);\n  }\n\n  onAction(): Observable<any> {\n    return this._onAction.asObservable();\n  }\n}\n\n/* tslint:disable:no-empty-interface */\n/** @deprecated use GlobalConfig */\nexport interface GlobalToastrConfig extends GlobalConfig {}\n/** @deprecated use IndividualConfig */\nexport interface IndividualToastrConfig extends IndividualConfig {}\n/** @deprecated use IndividualConfig */\nexport interface ToastrConfig extends IndividualConfig {}\n\nexport const DefaultNoComponentGlobalConfig: GlobalConfig = {\n  maxOpened: 0,\n  autoDismiss: false,\n  newestOnTop: true,\n  preventDuplicates: false,\n  resetTimeoutOnDuplicate: false,\n  iconClasses: {\n    error: 'toast-error',\n    info: 'toast-info',\n    success: 'toast-success',\n    warning: 'toast-warning',\n  },\n\n  // Individual\n  closeButton: false,\n  disableTimeOut: false,\n  timeOut: 5000,\n  extendedTimeOut: 1000,\n  enableHtml: false,\n  progressBar: false,\n  toastClass: 'toast',\n  positionClass: 'toast-top-right',\n  titleClass: 'toast-title',\n  messageClass: 'toast-message',\n  easing: 'ease-in',\n  easeTime: 300,\n  tapToDismiss: true,\n  onActivateTick: false,\n  progressAnimation: 'decreasing',\n};\n\nexport interface ToastToken {\n  default: GlobalConfig;\n  config: Partial<GlobalConfig>;\n}\n\nexport const TOAST_CONFIG = new InjectionToken<ToastToken>('ToastConfig');\n","import {\n  ComponentRef,\n  Injector,\n  ViewContainerRef\n} from '@angular/core';\n\nexport interface ComponentType<T> {\n  // tslint:disable-next-line:callable-types\n  new (...args: any[]): T;\n}\n\n\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nexport class ComponentPortal<T> {\n  private _attachedHost?: BasePortalHost;\n  /** The type of the component that will be instantiated for attachment. */\n  component: ComponentType<T>;\n\n  /**\n   * [Optional] Where the attached component should live in Angular's *logical* component tree.\n   * This is different from where the component *renders*, which is determined by the PortalHost.\n   * The origin necessary when the host is outside of the Angular application context.\n   */\n  viewContainerRef: ViewContainerRef;\n\n  /** Injector used for the instantiation of the component. */\n  injector: Injector;\n\n  constructor(component: ComponentType<T>, injector: Injector) {\n    this.component = component;\n    this.injector = injector;\n  }\n\n  /** Attach this portal to a host. */\n  attach(host: BasePortalHost, newestOnTop: boolean) {\n    this._attachedHost = host;\n    return host.attach(this, newestOnTop);\n  }\n\n  /** Detach this portal from its host */\n  detach() {\n    const host = this._attachedHost;\n    if (host) {\n      this._attachedHost = undefined;\n      return host.detach();\n    }\n  }\n\n  /** Whether this portal is attached to a host. */\n  get isAttached(): boolean {\n    return this._attachedHost != null;\n  }\n\n  /**\n   * Sets the PortalHost reference without performing `attach()`. This is used directly by\n   * the PortalHost when it is performing an `attach()` or `detach()`.\n   */\n  setAttachedHost(host?: BasePortalHost) {\n    this._attachedHost = host;\n  }\n}\n\n/**\n * Partial implementation of PortalHost that only deals with attaching a\n * ComponentPortal\n */\nexport abstract class BasePortalHost {\n  /** The portal currently attached to the host. */\n  private _attachedPortal?: ComponentPortal<any>;\n\n  /** A function that will permanently dispose this host. */\n  private _disposeFn?: () => void;\n\n  attach(portal: ComponentPortal<any>, newestOnTop: boolean) {\n    this._attachedPortal = portal;\n    return this.attachComponentPortal(portal, newestOnTop);\n  }\n\n  abstract attachComponentPortal<T>(portal: ComponentPortal<T>, newestOnTop: boolean): ComponentRef<T>;\n\n  detach() {\n    if (this._attachedPortal) {\n      this._attachedPortal.setAttachedHost();\n    }\n\n    this._attachedPortal = undefined;\n    if (this._disposeFn) {\n      this._disposeFn();\n      this._disposeFn = undefined;\n    }\n  }\n\n  setDisposeFn(fn: () => void) {\n    this._disposeFn = fn;\n  }\n}\n","import {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n} from '@angular/core';\nimport { BasePortalHost, ComponentPortal } from './portal';\n\n/**\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n *\n * This is the only part of the portal core that directly touches the DOM.\n */\nexport class DomPortalHost extends BasePortalHost {\n  constructor(\n    private _hostDomElement: Element,\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _appRef: ApplicationRef,\n  ) {\n    super();\n  }\n\n  /**\n   * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n   * @param portal Portal to be attached\n   */\n  attachComponentPortal<T>(\n    portal: ComponentPortal<T>,\n    newestOnTop: boolean,\n  ): ComponentRef<T> {\n    const componentFactory = this._componentFactoryResolver.resolveComponentFactory(\n      portal.component,\n    );\n    let componentRef: ComponentRef<T>;\n\n    // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n    // for the component (in terms of Angular's component tree, not rendering).\n    // When the ViewContainerRef is missing, we use the factory to create the component directly\n    // and then manually attach the ChangeDetector for that component to the application (which\n    // happens automatically when using a ViewContainer).\n    componentRef = componentFactory.create(portal.injector);\n\n    // When creating a component outside of a ViewContainer, we need to manually register\n    // its ChangeDetector with the application. This API is unfortunately not yet published\n    // in Angular core. The change detector must also be deregistered when the component\n    // is destroyed to prevent memory leaks.\n    this._appRef.attachView(componentRef.hostView);\n\n    this.setDisposeFn(() => {\n      this._appRef.detachView(componentRef.hostView);\n      componentRef.destroy();\n    });\n\n    // At this point the component has been instantiated, so we move it to the location in the DOM\n    // where we want it to be rendered.\n    if (newestOnTop) {\n      this._hostDomElement.insertBefore(\n        this._getComponentRootNode(componentRef),\n        this._hostDomElement.firstChild,\n      );\n    } else {\n      this._hostDomElement.appendChild(\n        this._getComponentRootNode(componentRef),\n      );\n    }\n\n    return componentRef;\n  }\n\n  /** Gets the root HTMLElement for an instantiated component. */\n  private _getComponentRootNode(componentRef: ComponentRef<any>): HTMLElement {\n    return (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, OnDestroy } from '@angular/core';\n\n/** Container inside which all toasts will render. */\n@Injectable({ providedIn: 'root' })\nexport class OverlayContainer implements OnDestroy {\n  protected _containerElement: HTMLElement;\n\n  constructor(@Inject(DOCUMENT) protected _document: any) {}\n\n  ngOnDestroy() {\n    if (this._containerElement && this._containerElement.parentNode) {\n      this._containerElement.parentNode.removeChild(this._containerElement);\n    }\n  }\n\n  /**\n   * This method returns the overlay container element. It will lazily\n   * create the element the first time  it is called to facilitate using\n   * the container in non-browser environments.\n   * @returns the container element\n   */\n  getContainerElement(): HTMLElement {\n    if (!this._containerElement) {\n      this._createContainer();\n    }\n    return this._containerElement;\n  }\n\n  /**\n   * Create the overlay container element, which is simply a div\n   * with the 'cdk-overlay-container' class on the document body.\n   */\n  protected _createContainer(): void {\n    const container = this._document.createElement('div');\n    container.classList.add('overlay-container');\n    this._document.body.appendChild(container);\n    this._containerElement = container;\n  }\n}\n","import { ComponentRef } from '@angular/core';\nimport { BasePortalHost, ComponentPortal } from '../portal/portal';\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nexport class OverlayRef {\n  constructor(private _portalHost: BasePortalHost) {}\n\n  attach(\n    portal: ComponentPortal<any>,\n    newestOnTop: boolean = true,\n  ): ComponentRef<any> {\n    return this._portalHost.attach(portal, newestOnTop);\n  }\n\n  /**\n   * Detaches an overlay from a portal.\n   * @returns Resolves when the overlay has been detached.\n   */\n  detach() {\n    return this._portalHost.detach();\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  Inject,\n  Injectable,\n} from '@angular/core';\n\nimport { DomPortalHost } from '../portal/dom-portal-host';\nimport { ToastContainerDirective } from '../toastr/toast.directive';\nimport { OverlayContainer } from './overlay-container';\nimport { OverlayRef } from './overlay-ref';\n\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalHost, so any kind of Portal can be loaded into one.\n */\n@Injectable({ providedIn: 'root' })\nexport class Overlay {\n  // Namespace panes by overlay container\n  private _paneElements: Map<\n    ToastContainerDirective,\n    { string?: HTMLElement }\n  > = new Map();\n\n  constructor(\n    private _overlayContainer: OverlayContainer,\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _appRef: ApplicationRef,\n    @Inject(DOCUMENT) private _document: any,\n  ) {}\n  /**\n   * Creates an overlay.\n   * @returns A reference to the created overlay.\n   */\n  create(\n    positionClass?: string,\n    overlayContainer?: ToastContainerDirective,\n  ): OverlayRef {\n    // get existing pane if possible\n    return this._createOverlayRef(\n      this.getPaneElement(positionClass, overlayContainer),\n    );\n  }\n\n  getPaneElement(\n    positionClass: string = '',\n    overlayContainer?: ToastContainerDirective,\n  ): HTMLElement {\n    if (!this._paneElements.get(overlayContainer)) {\n      this._paneElements.set(overlayContainer, {});\n    }\n\n    if (!this._paneElements.get(overlayContainer)[positionClass]) {\n      this._paneElements.get(overlayContainer)[positionClass] = this._createPaneElement(positionClass, overlayContainer);\n    }\n\n    return this._paneElements.get(overlayContainer)[positionClass];\n  }\n\n\n  /**\n   * Creates the DOM element for an overlay and appends it to the overlay container.\n   * @returns Newly-created pane element\n   */\n  private _createPaneElement(\n    positionClass: string,\n    overlayContainer?: ToastContainerDirective,\n  ): HTMLElement {\n    const pane = this._document.createElement('div');\n\n    pane.id = 'toast-container';\n    pane.classList.add(positionClass);\n    pane.classList.add('toast-container');\n\n    if (!overlayContainer) {\n      this._overlayContainer.getContainerElement().appendChild(pane);\n    } else {\n      overlayContainer.getContainerElement().appendChild(pane);\n    }\n\n    return pane;\n  }\n\n  /**\n   * Create a DomPortalHost into which the overlay content can be loaded.\n   * @param pane The DOM element to turn into a portal host.\n   * @returns A portal host for the given DOM element.\n   */\n  private _createPortalHost(pane: HTMLElement): DomPortalHost {\n    return new DomPortalHost(\n      pane,\n      this._componentFactoryResolver,\n      this._appRef,\n    );\n  }\n\n  /**\n   * Creates an OverlayRef for an overlay in the given DOM element.\n   * @param pane DOM element for the overlay\n   */\n  private _createOverlayRef(pane: HTMLElement): OverlayRef {\n    return new OverlayRef(this._createPortalHost(pane));\n  }\n}\n","import { Injector, InjectFlags } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { OverlayRef } from '../overlay/overlay-ref';\nimport { ToastPackage } from './toastr-config';\n\n/**\n * Reference to a toast opened via the Toastr service.\n */\nexport class ToastRef<T> {\n  /** The instance of component opened into the toast. */\n  componentInstance: T;\n\n  /** Subject for notifying the user that the toast has finished closing. */\n  private _afterClosed = new Subject<any>();\n  /** triggered when toast is activated */\n  private _activate = new Subject<any>();\n  /** notifies the toast that it should close before the timeout */\n  private _manualClose = new Subject<any>();\n  /** notifies the toast that it should reset the timeouts */\n  private _resetTimeout = new Subject<any>();\n\n  constructor(private _overlayRef: OverlayRef) {}\n\n  manualClose() {\n    this._manualClose.next();\n    this._manualClose.complete();\n  }\n\n  manualClosed(): Observable<any> {\n    return this._manualClose.asObservable();\n  }\n\n  timeoutReset(): Observable<any> {\n    return this._resetTimeout.asObservable();\n  }\n\n  /**\n   * Close the toast.\n   */\n  close(): void {\n    this._overlayRef.detach();\n    this._afterClosed.next();\n    this._manualClose.next();\n    this._afterClosed.complete();\n    this._manualClose.complete();\n    this._activate.complete();\n    this._resetTimeout.complete();\n  }\n\n  /** Gets an observable that is notified when the toast is finished closing. */\n  afterClosed(): Observable<any> {\n    return this._afterClosed.asObservable();\n  }\n\n  isInactive() {\n    return this._activate.isStopped;\n  }\n\n  activate() {\n    this._activate.next();\n    this._activate.complete();\n  }\n\n  /** Gets an observable that is notified when the toast has started opening. */\n  afterActivate(): Observable<any> {\n    return this._activate.asObservable();\n  }\n\n  /** Reset the toast timouts */\n  resetTimeout() {\n    this._resetTimeout.next();\n  }\n}\n\n/** Custom injector type specifically for instantiating components with a toast. */\nexport class ToastInjector implements Injector {\n  constructor(\n    private _toastPackage: ToastPackage,\n    private _parentInjector: Injector\n  ) {}\n\n  get<T>(token: any, notFoundValue?: T, flags?: InjectFlags): T | ToastPackage {\n    if (token === ToastPackage) {\n      return this._toastPackage;\n    }\n    return this._parentInjector.get<T>(token, notFoundValue, flags);\n  }\n}\n","import {\n  ComponentRef,\n  Inject,\n  Injectable,\n  Injector,\n  NgZone,\n  SecurityContext\n} from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { Observable } from 'rxjs';\n\nimport { Overlay } from '../overlay/overlay';\nimport { ComponentPortal } from '../portal/portal';\nimport { ToastInjector, ToastRef } from './toast-injector';\nimport { ToastContainerDirective } from './toast.directive';\nimport { GlobalConfig, IndividualConfig, ToastPackage, ToastToken, TOAST_CONFIG } from './toastr-config';\n\nexport interface ActiveToast<C> {\n  /** Your Toast ID. Use this to close it individually */\n  toastId: number;\n  /** the message of your toast. Stored to prevent duplicates */\n  message: string;\n  /** a reference to the component see portal.ts */\n  portal: ComponentRef<C>;\n  /** a reference to your toast */\n  toastRef: ToastRef<C>;\n  /** triggered when toast is active */\n  onShown: Observable<any>;\n  /** triggered when toast is destroyed */\n  onHidden: Observable<any>;\n  /** triggered on toast click */\n  onTap: Observable<any>;\n  /** available for your use in custom toast */\n  onAction: Observable<any>;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ToastrService {\n  toastrConfig: GlobalConfig;\n  currentlyActive = 0;\n  toasts: ActiveToast<any>[] = [];\n  overlayContainer: ToastContainerDirective;\n  previousToastMessage: string | undefined;\n  private index = 0;\n\n  constructor(\n    @Inject(TOAST_CONFIG) token: ToastToken,\n    private overlay: Overlay,\n    private _injector: Injector,\n    private sanitizer: DomSanitizer,\n    private ngZone: NgZone\n  ) {\n    this.toastrConfig = {\n      ...token.default,\n      ...token.config,\n    };\n    if (token.config.iconClasses) {\n      this.toastrConfig.iconClasses = {\n        ...token.default.iconClasses,\n        ...token.config.iconClasses,\n      };\n    }\n  }\n  /** show toast */\n  show(\n    message?: string,\n    title?: string,\n    override: Partial<IndividualConfig> = {},\n    type = ''\n  ) {\n    return this._preBuildNotification(\n      type,\n      message,\n      title,\n      this.applyConfig(override)\n    );\n  }\n  /** show successful toast */\n  success(\n    message?: string,\n    title?: string,\n    override: Partial<IndividualConfig> = {}\n  ) {\n    const type = this.toastrConfig.iconClasses.success || '';\n    return this._preBuildNotification(\n      type,\n      message,\n      title,\n      this.applyConfig(override)\n    );\n  }\n  /** show error toast */\n  error(\n    message?: string,\n    title?: string,\n    override: Partial<IndividualConfig> = {}\n  ) {\n    const type = this.toastrConfig.iconClasses.error || '';\n    return this._preBuildNotification(\n      type,\n      message,\n      title,\n      this.applyConfig(override)\n    );\n  }\n  /** show info toast */\n  info(\n    message?: string,\n    title?: string,\n    override: Partial<IndividualConfig> = {}\n  ) {\n    const type = this.toastrConfig.iconClasses.info || '';\n    return this._preBuildNotification(\n      type,\n      message,\n      title,\n      this.applyConfig(override)\n    );\n  }\n  /** show warning toast */\n  warning(\n    message?: string,\n    title?: string,\n    override: Partial<IndividualConfig> = {}\n  ) {\n    const type = this.toastrConfig.iconClasses.warning || '';\n    return this._preBuildNotification(\n      type,\n      message,\n      title,\n      this.applyConfig(override)\n    );\n  }\n  /**\n   * Remove all or a single toast by id\n   */\n  clear(toastId?: number) {\n    // Call every toastRef manualClose function\n    for (const toast of this.toasts) {\n      if (toastId !== undefined) {\n        if (toast.toastId === toastId) {\n          toast.toastRef.manualClose();\n          return;\n        }\n      } else {\n        toast.toastRef.manualClose();\n      }\n    }\n  }\n  /**\n   * Remove and destroy a single toast by id\n   */\n  remove(toastId: number) {\n    const found = this._findToast(toastId);\n    if (!found) {\n      return false;\n    }\n    found.activeToast.toastRef.close();\n    this.toasts.splice(found.index, 1);\n    this.currentlyActive = this.currentlyActive - 1;\n    if (!this.toastrConfig.maxOpened || !this.toasts.length) {\n      return false;\n    }\n    if (\n      this.currentlyActive < this.toastrConfig.maxOpened &&\n      this.toasts[this.currentlyActive]\n    ) {\n      const p = this.toasts[this.currentlyActive].toastRef;\n      if (!p.isInactive()) {\n        this.currentlyActive = this.currentlyActive + 1;\n        p.activate();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Finds a duplicate toast if one exists\n   */\n  private findDuplicate(message: string, resetOnDuplicate: boolean) {\n    for (let i = 0; i < this.toasts.length; i++) {\n      const toast = this.toasts[i];\n      if (toast.message === message) {\n        if (resetOnDuplicate && toast.toastRef.componentInstance.resetTimeout) {\n          toast.toastRef.resetTimeout();\n        }\n        return toast;\n      }\n    }\n    return null;\n  }\n\n  /** create a clone of global config and apply individual settings */\n  private applyConfig(override: Partial<IndividualConfig> = {}): GlobalConfig {\n    return { ...this.toastrConfig, ...override };\n  }\n\n  /**\n   * Find toast object by id\n   */\n  private _findToast(\n    toastId: number\n  ): { index: number; activeToast: ActiveToast<any> } | null {\n    for (let i = 0; i < this.toasts.length; i++) {\n      if (this.toasts[i].toastId === toastId) {\n        return { index: i, activeToast: this.toasts[i] };\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Determines the need to run inside angular's zone then builds the toast\n   */\n  private _preBuildNotification(\n    toastType: string,\n    message: string | undefined,\n    title: string | undefined,\n    config: GlobalConfig\n  ): ActiveToast<any> | null {\n    if (config.onActivateTick) {\n      return this.ngZone.run(() =>\n        this._buildNotification(toastType, message, title, config)\n      );\n    }\n    return this._buildNotification(toastType, message, title, config);\n  }\n\n  /**\n   * Creates and attaches toast data to component\n   * returns the active toast, or in case preventDuplicates is enabled the original/non-duplicate active toast.\n   */\n  private _buildNotification(\n    toastType: string,\n    message: string | undefined,\n    title: string | undefined,\n    config: GlobalConfig\n  ): ActiveToast<any> | null {\n    if (!config.toastComponent) {\n      throw new Error('toastComponent required');\n    }\n    // max opened and auto dismiss = true\n    if (\n      message &&\n      this.toastrConfig.preventDuplicates\n    ) {\n      const duplicate = this.findDuplicate(message, this.toastrConfig.resetTimeoutOnDuplicate);\n      if (duplicate !== null) {\n        return duplicate;\n      }\n    }\n    this.previousToastMessage = message;\n    let keepInactive = false;\n    if (\n      this.toastrConfig.maxOpened &&\n      this.currentlyActive >= this.toastrConfig.maxOpened\n    ) {\n      keepInactive = true;\n      if (this.toastrConfig.autoDismiss) {\n        this.clear(this.toasts[0].toastId);\n      }\n    }\n    const overlayRef = this.overlay.create(\n      config.positionClass,\n      this.overlayContainer\n    );\n    this.index = this.index + 1;\n    let sanitizedMessage: string | SafeHtml | undefined | null = message;\n    if (message && config.enableHtml) {\n      sanitizedMessage = this.sanitizer.sanitize(SecurityContext.HTML, message);\n    }\n    const toastRef = new ToastRef(overlayRef);\n    const toastPackage = new ToastPackage(\n      this.index,\n      config,\n      sanitizedMessage,\n      title,\n      toastType,\n      toastRef\n    );\n    const toastInjector = new ToastInjector(toastPackage, this._injector);\n    const component = new ComponentPortal(config.toastComponent, toastInjector);\n    const portal = overlayRef.attach(component, this.toastrConfig.newestOnTop);\n    toastRef.componentInstance = (<any>portal)._component;\n    const ins: ActiveToast<any> = {\n      toastId: this.index,\n      message: message || '',\n      toastRef,\n      onShown: toastRef.afterActivate(),\n      onHidden: toastRef.afterClosed(),\n      onTap: toastPackage.onTap(),\n      onAction: toastPackage.onAction(),\n      portal\n    };\n\n    if (!keepInactive) {\n      setTimeout(() => {\n        ins.toastRef.activate();\n        this.currentlyActive = this.currentlyActive + 1;\n      });\n    }\n\n    this.toasts.push(ins);\n    return ins;\n  }\n}\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger\n} from '@angular/animations';\nimport {\n  Component,\n  HostBinding,\n  HostListener,\n  NgZone,\n  OnDestroy\n} from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\nimport { Subscription } from 'rxjs';\nimport { IndividualConfig, ToastPackage } from './toastr-config';\nimport { ToastrService } from './toastr.service';\n\n@Component({\n  selector: '[toast-component]',\n  template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }}\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alertdialog\" aria-live=\"polite\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alertdialog\" aria-live=\"polite\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n  </div>\n  `,\n  animations: [\n    trigger('flyInOut', [\n      state('inactive', style({ opacity: 0 })),\n      state('active', style({ opacity: 1 })),\n      state('removed', style({ opacity: 0 })),\n      transition(\n        'inactive => active',\n        animate('{{ easeTime }}ms {{ easing }}')\n      ),\n      transition(\n        'active => removed',\n        animate('{{ easeTime }}ms {{ easing }}')\n      )\n    ])\n  ],\n  preserveWhitespaces: false\n})\nexport class Toast implements OnDestroy {\n  message?: string | SafeHtml | null;\n  title?: string;\n  options: IndividualConfig;\n  originalTimeout: number;\n  /** width of progress bar */\n  width = -1;\n  /** a combination of toast type and options.toastClass */\n  @HostBinding('class') toastClasses = '';\n  /** controls animation */\n  @HostBinding('@flyInOut')\n  state = {\n    value: 'inactive',\n    params: {\n      easeTime: this.toastPackage.config.easeTime,\n      easing: 'ease-in'\n    }\n  };\n\n  /** hides component when waiting to be displayed */\n  @HostBinding('style.display')\n  get displayStyle() {\n    if (this.state.value === 'inactive') {\n      return 'none';\n    }\n    return 'inherit';\n  }\n\n  private timeout: any;\n  private intervalId: any;\n  private hideTime: number;\n  private sub: Subscription;\n  private sub1: Subscription;\n  private sub2: Subscription;\n\n  constructor(\n    protected toastrService: ToastrService,\n    public toastPackage: ToastPackage,\n    protected ngZone?: NgZone\n  ) {\n    this.message = toastPackage.message;\n    this.title = toastPackage.title;\n    this.options = toastPackage.config;\n    this.originalTimeout = toastPackage.config.timeOut;\n    this.toastClasses = `${toastPackage.toastType} ${\n      toastPackage.config.toastClass\n    }`;\n    this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n      this.activateToast();\n    });\n    this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n      this.remove();\n    });\n    this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\n      this.resetTimeout();\n    });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    this.sub1.unsubscribe();\n    this.sub2.unsubscribe();\n    clearInterval(this.intervalId);\n    clearTimeout(this.timeout);\n  }\n  /**\n   * activates toast and sets timeout\n   */\n  activateToast() {\n    this.state = { ...this.state, value: 'active' };\n    if (!this.options.disableTimeOut && this.options.timeOut) {\n      this.outsideTimeout(() => this.remove(), this.options.timeOut);\n      this.hideTime = new Date().getTime() + this.options.timeOut;\n      if (this.options.progressBar) {\n        this.outsideInterval(() => this.updateProgress(), 10);\n      }\n    }\n  }\n  /**\n   * updates progress bar width\n   */\n  updateProgress() {\n    if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\n      return;\n    }\n    const now = new Date().getTime();\n    const remaining = this.hideTime - now;\n    this.width = (remaining / this.options.timeOut) * 100;\n    if (this.options.progressAnimation === 'increasing') {\n      this.width = 100 - this.width;\n    }\n    if (this.width <= 0) {\n      this.width = 0;\n    }\n    if (this.width >= 100) {\n      this.width = 100;\n    }\n  }\n\n  resetTimeout() {\n    clearTimeout(this.timeout);\n    clearInterval(this.intervalId);\n    this.state = { ...this.state, value: 'active' };\n\n    this.outsideTimeout(() => this.remove(), this.originalTimeout);\n    this.options.timeOut = this.originalTimeout;\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n    this.width = -1;\n    if (this.options.progressBar) {\n      this.outsideInterval(() => this.updateProgress(), 10);\n    }\n  }\n\n  /**\n   * tells toastrService to remove this toast after animation time\n   */\n  remove() {\n    if (this.state.value === 'removed') {\n      return;\n    }\n    clearTimeout(this.timeout);\n    this.state = { ...this.state, value: 'removed' };\n    this.outsideTimeout(\n      () => this.toastrService.remove(this.toastPackage.toastId),\n      +this.toastPackage.config.easeTime\n    );\n  }\n  @HostListener('click')\n  tapToast() {\n    if (this.state.value === 'removed') {\n      return;\n    }\n    this.toastPackage.triggerTap();\n    if (this.options.tapToDismiss) {\n      this.remove();\n    }\n  }\n  @HostListener('mouseenter')\n  stickAround() {\n    if (this.state.value === 'removed') {\n      return;\n    }\n    clearTimeout(this.timeout);\n    this.options.timeOut = 0;\n    this.hideTime = 0;\n\n    // disable progressBar\n    clearInterval(this.intervalId);\n    this.width = 0;\n  }\n  @HostListener('mouseleave')\n  delayedHideToast() {\n    if (\n      this.options.disableTimeOut ||\n      this.options.extendedTimeOut === 0 ||\n      this.state.value === 'removed'\n    ) {\n      return;\n    }\n    this.outsideTimeout(() => this.remove(), this.options.extendedTimeOut);\n    this.options.timeOut = this.options.extendedTimeOut;\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n    this.width = -1;\n    if (this.options.progressBar) {\n      this.outsideInterval(() => this.updateProgress(), 10);\n    }\n  }\n\n  outsideTimeout(func: Function, timeout: number) {\n    if (this.ngZone) {\n      this.ngZone.runOutsideAngular(\n        () =>\n          (this.timeout = setTimeout(\n            () => this.runInsideAngular(func),\n            timeout\n          ))\n      );\n    } else {\n      this.timeout = setTimeout(() => func(), timeout);\n    }\n  }\n\n  outsideInterval(func: Function, timeout: number) {\n    if (this.ngZone) {\n      this.ngZone.runOutsideAngular(\n        () =>\n          (this.intervalId = setInterval(\n            () => this.runInsideAngular(func),\n            timeout\n          ))\n      );\n    } else {\n      this.intervalId = setInterval(() => func(), timeout);\n    }\n  }\n\n  private runInsideAngular(func: Function) {\n    if (this.ngZone) {\n      this.ngZone.run(() => func());\n    } else {\n      func();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { Toast } from './toast.component';\nimport {\n  DefaultNoComponentGlobalConfig,\n  GlobalConfig,\n  TOAST_CONFIG,\n} from './toastr-config';\n\nexport const DefaultGlobalConfig: GlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: Toast,\n};\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [Toast],\n  exports: [Toast],\n  entryComponents: [Toast],\n})\nexport class ToastrModule {\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders {\n    return {\n      ngModule: ToastrModule,\n      providers: [\n        {\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: DefaultGlobalConfig,\n            config,\n          },\n        },\n      ],\n    };\n  }\n}\n\n@NgModule({\n  imports: [CommonModule],\n})\nexport class ToastrComponentlessModule {\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders {\n    return {\n      ngModule: ToastrModule,\n      providers: [\n        {\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: DefaultNoComponentGlobalConfig,\n            config,\n          },\n        },\n      ],\n    };\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { ModuleWithProviders } from '@angular/compiler/src/core';\r\nimport {\r\n  ApplicationRef,\r\n  Component,\r\n  HostBinding,\r\n  HostListener,\r\n  NgModule,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { SafeHtml } from '@angular/platform-browser';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport {\r\n  DefaultNoComponentGlobalConfig,\r\n  GlobalConfig,\r\n  IndividualConfig,\r\n  ToastPackage,\r\n  TOAST_CONFIG,\r\n} from './toastr-config';\r\nimport { ToastrService } from './toastr.service';\r\n\r\n@Component({\r\n  selector: '[toast-component]',\r\n  template: `\r\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" class=\"toast-close-button\" aria-label=\"Close\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\r\n    {{ title }}\r\n  </div>\r\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\" aria-live=\"polite\"\r\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\r\n  </div>\r\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\" aria-live=\"polite\"\r\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\r\n    {{ message }}\r\n  </div>\r\n  <div *ngIf=\"options.progressBar\">\r\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\r\n  </div>\r\n  `,\r\n})\r\nexport class ToastNoAnimation implements OnDestroy {\r\n  message?: string | SafeHtml | null;\r\n  title?: string;\r\n  options: IndividualConfig;\r\n  originalTimeout: number;\r\n  /** width of progress bar */\r\n  width = -1;\r\n  /** a combination of toast type and options.toastClass */\r\n  @HostBinding('class') toastClasses = '';\r\n\r\n  /** hides component when waiting to be displayed */\r\n  @HostBinding('style.display')\r\n  get displayStyle() {\r\n    if (this.state === 'inactive') {\r\n      return 'none';\r\n    }\r\n    return 'inherit';\r\n  }\r\n\r\n  /** controls animation */\r\n  state = 'inactive';\r\n  private timeout: any;\r\n  private intervalId: any;\r\n  private hideTime: number;\r\n  private sub: Subscription;\r\n  private sub1: Subscription;\r\n  private sub2: Subscription;\r\n\r\n  constructor(\r\n    protected toastrService: ToastrService,\r\n    public toastPackage: ToastPackage,\r\n    protected appRef: ApplicationRef,\r\n  ) {\r\n    this.message = toastPackage.message;\r\n    this.title = toastPackage.title;\r\n    this.options = toastPackage.config;\r\n    this.originalTimeout = toastPackage.config.timeOut;\r\n    this.toastClasses = `${toastPackage.toastType} ${\r\n      toastPackage.config.toastClass\r\n    }`;\r\n    this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\r\n      this.activateToast();\r\n    });\r\n    this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\r\n      this.remove();\r\n    });\r\n    this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\r\n      this.resetTimeout();\r\n    });\r\n  }\r\n  ngOnDestroy() {\r\n    this.sub.unsubscribe();\r\n    this.sub1.unsubscribe();\r\n    this.sub2.unsubscribe();\r\n    clearInterval(this.intervalId);\r\n    clearTimeout(this.timeout);\r\n  }\r\n  /**\r\n   * activates toast and sets timeout\r\n   */\r\n  activateToast() {\r\n    this.state = 'active';\r\n    if (!this.options.disableTimeOut && this.options.timeOut) {\r\n      this.timeout = setTimeout(() => {\r\n        this.remove();\r\n      }, this.options.timeOut);\r\n      this.hideTime = new Date().getTime() + this.options.timeOut;\r\n      if (this.options.progressBar) {\r\n        this.intervalId = setInterval(() => this.updateProgress(), 10);\r\n      }\r\n    }\r\n    if (this.options.onActivateTick) {\r\n      this.appRef.tick();\r\n    }\r\n  }\r\n  /**\r\n   * updates progress bar width\r\n   */\r\n  updateProgress() {\r\n    if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\r\n      return;\r\n    }\r\n    const now = new Date().getTime();\r\n    const remaining = this.hideTime - now;\r\n    this.width = (remaining / this.options.timeOut) * 100;\r\n    if (this.options.progressAnimation === 'increasing') {\r\n      this.width = 100 - this.width;\r\n    }\r\n    if (this.width <= 0) {\r\n      this.width = 0;\r\n    }\r\n    if (this.width >= 100) {\r\n      this.width = 100;\r\n    }\r\n  }\r\n\r\n  resetTimeout() {\r\n    clearTimeout(this.timeout);\r\n    clearInterval(this.intervalId);\r\n    this.state = 'active';\r\n\r\n    this.options.timeOut = this.originalTimeout;\r\n    this.timeout = setTimeout(() => this.remove(), this.originalTimeout);\r\n    this.hideTime = new Date().getTime() + (this.originalTimeout || 0);\r\n    this.width = -1;\r\n    if (this.options.progressBar) {\r\n      this.intervalId = setInterval(() => this.updateProgress(), 10);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * tells toastrService to remove this toast after animation time\r\n   */\r\n  remove() {\r\n    if (this.state === 'removed') {\r\n      return;\r\n    }\r\n    clearTimeout(this.timeout);\r\n    this.state = 'removed';\r\n    this.timeout = setTimeout(() =>\r\n      this.toastrService.remove(this.toastPackage.toastId),\r\n    );\r\n  }\r\n  @HostListener('click')\r\n  tapToast() {\r\n    if (this.state === 'removed') {\r\n      return;\r\n    }\r\n    this.toastPackage.triggerTap();\r\n    if (this.options.tapToDismiss) {\r\n      this.remove();\r\n    }\r\n  }\r\n  @HostListener('mouseenter')\r\n  stickAround() {\r\n    if (this.state === 'removed') {\r\n      return;\r\n    }\r\n    clearTimeout(this.timeout);\r\n    this.options.timeOut = 0;\r\n    this.hideTime = 0;\r\n\r\n    // disable progressBar\r\n    clearInterval(this.intervalId);\r\n    this.width = 0;\r\n  }\r\n  @HostListener('mouseleave')\r\n  delayedHideToast() {\r\n    if (\r\n      this.options.disableTimeOut ||\r\n      this.options.extendedTimeOut === 0 ||\r\n      this.state === 'removed'\r\n    ) {\r\n      return;\r\n    }\r\n    this.timeout = setTimeout(\r\n      () => this.remove(),\r\n      this.options.extendedTimeOut,\r\n    );\r\n    this.options.timeOut = this.options.extendedTimeOut;\r\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\r\n    this.width = -1;\r\n    if (this.options.progressBar) {\r\n      this.intervalId = setInterval(() => this.updateProgress(), 10);\r\n    }\r\n  }\r\n}\r\n\r\nexport const DefaultNoAnimationsGlobalConfig: GlobalConfig = {\r\n  ...DefaultNoComponentGlobalConfig,\r\n  toastComponent: ToastNoAnimation,\r\n};\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [ToastNoAnimation],\r\n  exports: [ToastNoAnimation],\r\n  entryComponents: [ToastNoAnimation],\r\n})\r\nexport class ToastNoAnimationModule {\r\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders {\r\n    return {\r\n      ngModule: ToastNoAnimationModule,\r\n      providers: [\r\n        {\r\n          provide: TOAST_CONFIG,\r\n          useValue: {\r\n            default: DefaultNoAnimationsGlobalConfig,\r\n            config,\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n}\r\n"]}