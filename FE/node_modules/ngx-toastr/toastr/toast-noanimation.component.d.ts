import { ModuleWithProviders } from '@angular/compiler/src/core';
import { ApplicationRef, OnDestroy } from '@angular/core';
import { SafeHtml } from '@angular/platform-browser';
import { GlobalConfig, IndividualConfig, ToastPackage } from './toastr-config';
import { ToastrService } from './toastr.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
export declare class ToastNoAnimation implements OnDestroy {
    protected toastrService: ToastrService;
    toastPackage: ToastPackage;
    protected appRef: ApplicationRef;
    message?: string | SafeHtml | null;
    title?: string;
    options: IndividualConfig;
    originalTimeout: number;
    /** width of progress bar */
    width: number;
    /** a combination of toast type and options.toastClass */
    toastClasses: string;
    /** hides component when waiting to be displayed */
    readonly displayStyle: "none" | "inherit";
    /** controls animation */
    state: string;
    private timeout;
    private intervalId;
    private hideTime;
    private sub;
    private sub1;
    private sub2;
    constructor(toastrService: ToastrService, toastPackage: ToastPackage, appRef: ApplicationRef);
    ngOnDestroy(): void;
    /**
     * activates toast and sets timeout
     */
    activateToast(): void;
    /**
     * updates progress bar width
     */
    updateProgress(): void;
    resetTimeout(): void;
    /**
     * tells toastrService to remove this toast after animation time
     */
    remove(): void;
    tapToast(): void;
    stickAround(): void;
    delayedHideToast(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ToastNoAnimation, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ToastNoAnimation, "[toast-component]", never, {}, {}, never, never>;
}
export declare const DefaultNoAnimationsGlobalConfig: GlobalConfig;
export declare class ToastNoAnimationModule {
    static forRoot(config?: Partial<GlobalConfig>): (ModuleWithProviders)&{ngModule:ToastNoAnimationModule};
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ToastNoAnimationModule, [typeof ToastNoAnimation], [typeof ɵngcc1.CommonModule], [typeof ToastNoAnimation]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ToastNoAnimationModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9hc3Qtbm9hbmltYXRpb24uY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInRvYXN0LW5vYW5pbWF0aW9uLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0QsdURBQW1COzs7QUFDdkUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzIH0gZnJvbSAnQGFuZ3VsYXIvY29tcGlsZXIvc3JjL2NvcmUnO1xuaW1wb3J0IHsgQXBwbGljYXRpb25SZWYsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU2FmZUh0bWwgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcbmltcG9ydCB7IEdsb2JhbENvbmZpZywgSW5kaXZpZHVhbENvbmZpZywgVG9hc3RQYWNrYWdlIH0gZnJvbSAnLi90b2FzdHItY29uZmlnJztcbmltcG9ydCB7IFRvYXN0clNlcnZpY2UgfSBmcm9tICcuL3RvYXN0ci5zZXJ2aWNlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFRvYXN0Tm9BbmltYXRpb24gaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuICAgIHByb3RlY3RlZCB0b2FzdHJTZXJ2aWNlOiBUb2FzdHJTZXJ2aWNlO1xuICAgIHRvYXN0UGFja2FnZTogVG9hc3RQYWNrYWdlO1xuICAgIHByb3RlY3RlZCBhcHBSZWY6IEFwcGxpY2F0aW9uUmVmO1xuICAgIG1lc3NhZ2U/OiBzdHJpbmcgfCBTYWZlSHRtbCB8IG51bGw7XG4gICAgdGl0bGU/OiBzdHJpbmc7XG4gICAgb3B0aW9uczogSW5kaXZpZHVhbENvbmZpZztcbiAgICBvcmlnaW5hbFRpbWVvdXQ6IG51bWJlcjtcbiAgICAvKiogd2lkdGggb2YgcHJvZ3Jlc3MgYmFyICovXG4gICAgd2lkdGg6IG51bWJlcjtcbiAgICAvKiogYSBjb21iaW5hdGlvbiBvZiB0b2FzdCB0eXBlIGFuZCBvcHRpb25zLnRvYXN0Q2xhc3MgKi9cbiAgICB0b2FzdENsYXNzZXM6IHN0cmluZztcbiAgICAvKiogaGlkZXMgY29tcG9uZW50IHdoZW4gd2FpdGluZyB0byBiZSBkaXNwbGF5ZWQgKi9cbiAgICByZWFkb25seSBkaXNwbGF5U3R5bGU6IFwibm9uZVwiIHwgXCJpbmhlcml0XCI7XG4gICAgLyoqIGNvbnRyb2xzIGFuaW1hdGlvbiAqL1xuICAgIHN0YXRlOiBzdHJpbmc7XG4gICAgcHJpdmF0ZSB0aW1lb3V0O1xuICAgIHByaXZhdGUgaW50ZXJ2YWxJZDtcbiAgICBwcml2YXRlIGhpZGVUaW1lO1xuICAgIHByaXZhdGUgc3ViO1xuICAgIHByaXZhdGUgc3ViMTtcbiAgICBwcml2YXRlIHN1YjI7XG4gICAgY29uc3RydWN0b3IodG9hc3RyU2VydmljZTogVG9hc3RyU2VydmljZSwgdG9hc3RQYWNrYWdlOiBUb2FzdFBhY2thZ2UsIGFwcFJlZjogQXBwbGljYXRpb25SZWYpO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogYWN0aXZhdGVzIHRvYXN0IGFuZCBzZXRzIHRpbWVvdXRcbiAgICAgKi9cbiAgICBhY3RpdmF0ZVRvYXN0KCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogdXBkYXRlcyBwcm9ncmVzcyBiYXIgd2lkdGhcbiAgICAgKi9cbiAgICB1cGRhdGVQcm9ncmVzcygpOiB2b2lkO1xuICAgIHJlc2V0VGltZW91dCgpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIHRlbGxzIHRvYXN0clNlcnZpY2UgdG8gcmVtb3ZlIHRoaXMgdG9hc3QgYWZ0ZXIgYW5pbWF0aW9uIHRpbWVcbiAgICAgKi9cbiAgICByZW1vdmUoKTogdm9pZDtcbiAgICB0YXBUb2FzdCgpOiB2b2lkO1xuICAgIHN0aWNrQXJvdW5kKCk6IHZvaWQ7XG4gICAgZGVsYXllZEhpZGVUb2FzdCgpOiB2b2lkO1xufVxuZXhwb3J0IGRlY2xhcmUgY29uc3QgRGVmYXVsdE5vQW5pbWF0aW9uc0dsb2JhbENvbmZpZzogR2xvYmFsQ29uZmlnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgVG9hc3ROb0FuaW1hdGlvbk1vZHVsZSB7XG4gICAgc3RhdGljIGZvclJvb3QoY29uZmlnPzogUGFydGlhbDxHbG9iYWxDb25maWc+KTogTW9kdWxlV2l0aFByb3ZpZGVycztcbn1cbiJdfQ==